//buildscript {
//    ext {
//        springBootVersion = '2.2.12.RELEASE'
//    }
//    repositories {
//        maven { url = "http://maven.aliyun.com/nexus/content/groups/public" }
//        maven { url = "http://mirrors.163.com/maven/repository/maven-public" }
//        maven { url = "http://repo.spring.io/release" }
//        maven { url = "http://repo.spring.io/snapshot" }
//        maven { url = "http://repo.spring.io/milestone" }
//    }
//    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//    }
//}
//
//apply plugin: 'java-library'
//apply plugin: 'eclipse'
//apply plugin: 'idea'
//apply plugin: 'maven' // 引入maven插件
//apply plugin: 'io.spring.dependency-management'
//
//group = 'cn.zhoushilan' // 会按照group生成.m2下的目录路径
//version = '1.0.0-RELEASE' // 指定版本
//sourceCompatibility = 1.8
//
//repositories {
//    mavenLocal() // 使用本地仓库
//    mavenCentral()
//}
//
//// 指定上传的路径
//def localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
//
//// 上传Task，Gradle会生成并上传pom.xml文件。
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            repository(url: localMavenRepo)
//
//            //构造项目的Pom文件
//            pom.project {
//                name = project.name
//                packaging = 'jar'
//                description = 'description'
//            }
//        }
//
//    }
//}
//
//dependencies {
//    testCompile group: 'junit', name: 'junit', version: '4.12'
//    implementation 'org.springframework.boot:spring-boot-starter:2.2.12.RELEASE'
//    implementation 'org.aspectj:aspectjweaver:1.8.13'
//    implementation "org.apache.httpcomponents:httpclient:4.5.12"
//    implementation 'com.github.tencentyun:tls-sig-api-v2:2.0'
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.2.12.RELEASE'
//    implementation 'com.fasterxml.jackson.core:jackson-databind:2.6.5'
//    implementation 'com.google.guava:guava:22.0'
//    implementation 'cn.hutool:hutool-all:5.3.2'
//    implementation 'org.projectlombok:lombok:1.18.8'
//    implementation 'io.springfox:springfox-swagger2:2.8.0'
//}

buildscript {
    ext {
        springBootVersion = '2.2.12.RELEASE'
    }
    repositories {
        maven { url = "http://maven.aliyun.com/nexus/content/groups/public" }
        maven { url = "http://mirrors.163.com/maven/repository/maven-public" }
        maven { url = "http://repo.spring.io/release" }
        maven { url = "http://repo.spring.io/snapshot" }
        maven { url = "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven' // 引入maven插件
apply plugin: 'maven-publish'
apply plugin: 'io.spring.dependency-management'

group = 'cn.zhoushilan' // 会按照group生成.m2下的目录路径
version = '1.0.0-SNAPSHOT' // 指定版本
sourceCompatibility = 1.8

repositories {
    mavenLocal() // 使用本地仓库
    mavenCentral()
}

// 指定上传的路径
def localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath

// 上传Task，Gradle会生成并上传pom.xml文件。
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: localMavenRepo)

            //构造项目的Pom文件
            pom.project {
                name = project.name
                packaging = 'jar'
                description = 'description'
            }
        }

    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'org.springframework.boot:spring-boot-starter:2.2.12.RELEASE'
    implementation 'org.aspectj:aspectjweaver:1.8.13'
    implementation "org.apache.httpcomponents:httpclient:4.5.12"
    implementation 'com.github.tencentyun:tls-sig-api-v2:2.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.2.12.RELEASE'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.6.5'
    implementation 'com.google.guava:guava:22.0'
    implementation 'cn.hutool:hutool-all:5.3.2'
    implementation 'org.projectlombok:lombok:1.18.8'
    implementation 'io.springfox:springfox-swagger2:2.8.0'
}

//task sourcesJar (type:Jar) {
//    archiveClassifier = 'sources'
//}
//
////设置任务依赖关系,打jar包的同时,打源码包
//jar.dependsOn(sourcesJar)
//
///**
// * 默认使用gradlew clean install命令时,仅仅只是安装编译好的包,源码包
// * 是不会安装到maven仓库的,添加此配置可以将源码包打入到本地maven仓库
// * doc包也可以如法炮制
// */
//artifacts {
//    archives sourcesJar
//}

publishing {
    publications {
        myPublication(MavenPublication) {
//            如果是war包填写components.web，如果是jar包填写components.java
            from components.java
//            指定group/artifact/version信息，可以不填。默认使用项目group/name/version作为groupId/artifactId/version
//            groupId需要注意一下,如果下面仓库的配置是oss.sonatype.org(即中央仓库),那么这里的groupId必须为你在sonatype中申请的ISSUE中设置的ID
            groupId "cn.zhoushilan"
            artifactId "web-tencent-im-starter"
            version "$version"
//            artifact(sourcesJar) {
//                classifier = 'sources'
//            }
        }
    }
    repositories {
        maven {
            if (project.version.endsWith('-SNAPSHOT')) {
//                快照版本地址
//            这里如果配置的是sonatype(中央仓库的地址),需要注意上方的groupId,应该跟sonatype中的对应的ISSUE中设置的Group Id 一致
                url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            } else {
//                正式版本地址
//                这里如果配置的是sonatype(中央仓库的地址),需要注意上方的groupId,应该跟sonatype中的对应的ISSUE中设置的Group Id 一致
                url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
            credentials {
                username = 'sonatype用户名'
                password = 'sonatype密码'
            }
        }
    }
}
